AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Bootstrap IAM roles and OIDC trust for GitHub Actions deployments.
  Supports multiple projects by namespacing roles with ProjectId.

Parameters:
  GitHubOrgUser:
    Description: Name of GitHub organization/user (case sensitive)
    Type: String
    Default: "Projects-Kanyuy"

  RepositoryName:
    Description: Name of GitHub repository (case sensitive)
    Type: String

  ProjectId:
    Description: The project identifier (used to namespace IAM roles)
    Type: String
    AllowedPattern: "[a-z][a-z0-9-]{2,30}"
    ConstraintDescription: Must be lowercase letters, numbers, and hyphens.

  MainAccountId:
    Description: Main AWS Account ID that holds the IAM users allowed to assume roles
    Type: String
    Default: "362954627441"

  OIDCAudience:
    Description: Audience supplied to configure-aws-credentials
    Default: "sts.amazonaws.com"
    Type: String

Resources:
  GithubOidc:
    Type: AWS::IAM::OIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - ffffffffffffffffffffffffffffffffffffffff

  DeployRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "deploy-${ProjectId}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !Ref GithubOidc
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: !Ref OIDCAudience
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub "repo:${GitHubOrgUser}/${RepositoryName}:*"
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${MainAccountId}:root"
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
        - arn:aws:iam::aws:policy/AmazonVPCFullAccess
        - arn:aws:iam::aws:policy/AmazonRDSFullAccess
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess
        - arn:aws:iam::aws:policy/SecretsManagerReadWrite
        - arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator
        - arn:aws:iam::aws:policy/AmazonRoute53FullAccess
        - arn:aws:iam::aws:policy/AWSCertificateManagerFullAccess
        - arn:aws:iam::aws:policy/CloudFrontFullAccess

  DeployRolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "deploy-root-${ProjectId}"
      Roles: [!Ref DeployRole]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - iam:GetRole
              - iam:PassRole
              - iam:CreateRole
              - iam:AttachRolePolicy
              - iam:DetachRolePolicy
              - iam:DeleteRole
              - iam:UpdateAssumeRolePolicy
              - iam:CreateInstanceProfile
              - iam:AddRoleToInstanceProfile
              - iam:RemoveRoleFromInstanceProfile
              - iam:DeleteInstanceProfile
              - iam:TagRole
              - iam:UntagRole
              - iam:GetUser
              - iam:CreateUser
              - iam:DeleteUser
              - iam:ListAccessKeys
              - iam:CreateAccessKey
            Resource:
              - !Sub "arn:aws:iam::${AWS::AccountId}:role/*"
              - !Sub "arn:aws:iam::${AWS::AccountId}:user/*"
          - Effect: Allow
            Action:
              - ecr:*
              - ecs:*
              - logs:*
              - elasticloadbalancing:*
              - sns:*
              - ec2:*
              - ssm:*
              - sqs:*
              - servicediscovery:*
              - autoscaling:*
              - s3:*
              - ses:*
              - events:*
              - cloudformation:*
              - elasticfilesystem:*
            Resource: "*"

  DevRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "dev-${ProjectId}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${MainAccountId}:root"
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  AdminRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "admin-${ProjectId}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${MainAccountId}:root"
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

Outputs:
  DeployRoleArn:
    Value: !GetAtt DeployRole.Arn
    Description: ARN of the deploy role used by GitHub Actions

  DevRoleArn:
    Value: !GetAtt DevRole.Arn
    Description: ARN of the developer role

  AdminRoleArn:
    Value: !GetAtt AdminRole.Arn
    Description: ARN of the administrator role
