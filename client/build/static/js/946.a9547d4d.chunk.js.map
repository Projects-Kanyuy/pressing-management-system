{"version":3,"file":"static/js/946.a9547d4d.chunk.js","mappings":"mOAUA,MAyDA,EAzDsBA,KAClB,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,KACTC,GAAWC,EAAAA,EAAAA,OACVC,EAAkBC,IAAuBC,EAAAA,EAAAA,UAAS,OAClDC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,IAE7BK,GAAYC,EAAAA,EAAAA,aAAYC,UAC1BL,GAAW,GACXE,EAAS,IACT,IACI,MAAM,KAAEI,SAAeC,EAAAA,EAAAA,IAAef,GAEtCK,EAAoBS,EACxB,CAAE,MAAOE,GAAM,IAADC,EAAAC,EAAAC,EACVT,EAAkC,OAAb,QAAZO,EAAAD,EAAII,gBAAQ,IAAAH,OAAA,EAAZA,EAAcI,QAAiB,oBAAkC,QAAZH,EAAAF,EAAII,gBAAQ,IAAAF,GAAM,QAANC,EAAZD,EAAcJ,YAAI,IAAAK,OAAN,EAAZA,EAAoBG,UAAW,sCAC7FC,QAAQd,MAAM,8BAA+BO,EAAII,UAAYJ,EACjE,CAAC,QACGR,GAAW,EACf,GACD,CAACR,IAOJ,OALAwB,EAAAA,EAAAA,WAAU,KACNb,KACD,CAACA,IAGAJ,GAAgBkB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCC,UAACF,EAAAA,EAAAA,KAACG,EAAAA,EAAO,CAACC,KAAK,SACrFpB,GACAqB,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,oBAAmBC,SAAA,EAC9BF,EAAAA,EAAAA,KAACM,EAAAA,EAAa,CAACF,KAAM,GAAIH,UAAU,iCACnCD,EAAAA,EAAAA,KAAA,KAAGC,UAAU,yBAAwBC,SAAElB,KACvCgB,EAAAA,EAAAA,KAACO,EAAAA,EAAM,CAACC,QAASA,IAAM/B,GAAU,GAAIgC,QAAQ,YAAYR,UAAU,OAAMC,SAAC,eAG7EvB,GAGD0B,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,YAAWC,SAAA,EACtBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yCAAwCC,UAClDG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,8BAA6BC,SAAA,EACxCF,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAI,WAAWpC,IAAM0B,UAAU,oHAAmHC,UACrJF,EAAAA,EAAAA,KAACY,EAAAA,EAAS,CAACR,KAAM,QAErBC,EAAAA,EAAAA,MAAA,MAAIJ,UAAU,kFAAiFC,SAAA,CAAC,eACjFG,EAAAA,EAAAA,MAAA,QAAMJ,UAAU,uDAAsDC,SAAA,CAAC,IAAEvB,EAAiBkC,0BAIjHb,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACC,iBAAiB,oBAAmBb,UAEtCF,EAAAA,EAAAA,KAACgB,EAAAA,EAAe,CAACrC,iBAAkBA,EAAkBsC,YAAY,UAhB/CjB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,kBAAiBC,SAAC,oC","sources":["pages/Orders/EditOrderPage.js"],"sourcesContent":["// client/src/pages/Orders/EditOrderPage.js\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams, useNavigate, Link } from 'react-router-dom';\r\nimport CreateOrderForm from '../../components/Orders/CreateOrderForm';\r\nimport Card from '../../components/UI/Card';\r\nimport Spinner from '../../components/UI/Spinner';\r\nimport { fetchOrderById } from '../../services/api';\r\nimport { ArrowLeft, AlertTriangle } from 'lucide-react';\r\nimport Button from '../../components/UI/Button';\r\n\r\nconst EditOrderPage = () => {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const [initialOrderData, setInitialOrderData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n\r\n    const loadOrder = useCallback(async () => {\r\n        setLoading(true);\r\n        setError('');\r\n        try {\r\n            const { data } = await fetchOrderById(id);\r\n            // The CreateOrderForm useEffect will handle transforming this data\r\n            setInitialOrderData(data);\r\n        } catch (err) {\r\n            setError(err.response?.status === 404 ? 'Order not found.' : (err.response?.data?.message || 'Failed to fetch order for editing.'));\r\n            console.error(\"Fetch Order for Edit Error:\", err.response || err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        loadOrder();\r\n    }, [loadOrder]);\r\n\r\n\r\n    if (loading) return <div className=\"flex justify-center items-center h-64\"><Spinner size=\"lg\" /></div>;\r\n    if (error) return (\r\n        <div className=\"text-center py-10\">\r\n            <AlertTriangle size={48} className=\"mx-auto text-apple-red mb-4\" />\r\n            <p className=\"text-xl text-apple-red\">{error}</p>\r\n            <Button onClick={() => navigate(-1)} variant=\"secondary\" className=\"mt-4\">Go Back</Button>\r\n        </div>\r\n    );\r\n    if (!initialOrderData) return <p className=\"text-center p-4\">Order data could not be loaded.</p>; // Fallback if data is null post-loading\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            <div className=\"flex items-center justify-between mb-6\">\r\n                 <div className=\"flex items-center space-x-2\">\r\n                     <Link to={`/orders/${id}`} className=\"text-apple-gray-500 hover:text-apple-blue p-1.5 rounded-full hover:bg-apple-gray-100 dark:hover:bg-apple-gray-800\">\r\n                        <ArrowLeft size={20} />\r\n                    </Link>\r\n                    <h1 className=\"text-2xl sm:text-3xl font-semibold text-apple-gray-800 dark:text-apple-gray-100\">\r\n                        Edit Order <span className=\"text-lg text-apple-gray-500 dark:text-apple-gray-400\">#{initialOrderData.receiptNumber}</span>\r\n                    </h1>\r\n                </div>\r\n            </div>\r\n            <Card contentClassName=\"p-4 sm:p-6 md:p-8\">\r\n                {/* Pass the fetched initialOrderData to the form */}\r\n                <CreateOrderForm initialOrderData={initialOrderData} isEditMode={true} />\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditOrderPage;"],"names":["EditOrderPage","id","useParams","navigate","useNavigate","initialOrderData","setInitialOrderData","useState","loading","setLoading","error","setError","loadOrder","useCallback","async","data","fetchOrderById","err","_err$response","_err$response2","_err$response2$data","response","status","message","console","useEffect","_jsx","className","children","Spinner","size","_jsxs","AlertTriangle","Button","onClick","variant","Link","to","ArrowLeft","receiptNumber","Card","contentClassName","CreateOrderForm","isEditMode"],"sourceRoot":""}