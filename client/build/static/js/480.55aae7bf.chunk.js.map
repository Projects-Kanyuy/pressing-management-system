{"version":3,"file":"static/js/480.55aae7bf.chunk.js","mappings":"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","sources":["components/UI/ChoosePlanButton.js","pages/Public/PricingPage.js"],"sourcesContent":["// client/src/components/UI/ChoosePlanButton.js\r\n\r\nimport React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { changeSubscriptionPlanApi } from '../../services/api';\r\nimport Button from './Button';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst ChoosePlanButton = ({ planName, isFeatured }) => {\r\n    const { user, login } = useAuth();\r\n    const navigate = useNavigate();\r\n    const { t } = useTranslation();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleUpgrade = async () => {\r\n        if (!window.confirm(`Are you sure you want to upgrade to the ${planName} plan?`)) {\r\n            return;\r\n        }\r\n        setIsLoading(true);\r\n        try {\r\n            const { data } = await changeSubscriptionPlanApi({ planName });\r\n            // The backend returns the updated user object and a new token\r\n            // We use the login function to update the global auth state\r\n            login(data.user, data.token); \r\n            toast.success(data.message);\r\n            navigate('/app/dashboard'); // Redirect to their dashboard after successful upgrade\r\n        } catch (error) {\r\n            toast.error(error.response?.data?.message || \"Failed to upgrade plan. Please try again.\");\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // --- RENDER LOGIC ---\r\n\r\n    // 1. If a user is logged in...\r\n    if (user) {\r\n        // ...and they are already on this plan, show a disabled button.\r\n        if (user.tenant?.plan === planName) {\r\n            return (\r\n                <Button variant=\"secondary\" size=\"lg\" className=\"w-full\" disabled>\r\n                    {t('public.pricing.currentPlan', 'Current Plan')}\r\n                </Button>\r\n            );\r\n        }\r\n        // ...otherwise, show the \"Upgrade\" button which triggers the API call.\r\n        return (\r\n            <Button \r\n                variant={isFeatured ? 'primary' : 'secondary'} \r\n                size=\"lg\" \r\n                className=\"w-full\" \r\n                onClick={handleUpgrade} \r\n                isLoading={isLoading}\r\n            >\r\n                {t('public.pricing.upgrade', 'Upgrade to')} {planName}\r\n            </Button>\r\n        );\r\n    } \r\n    \r\n    // 2. If no user is logged in (guest), show a link to the registration page.\r\n    // This link correctly passes the chosen plan in the URL.\r\n    return (\r\n        <Link to={`/signup?plan=${planName.toLowerCase()}`} className=\"w-full\">\r\n            <Button variant={isFeatured ? 'primary' : 'secondary'} size=\"lg\" className=\"w-full\">\r\n                {t('public.pricing.choose', 'Choose')} {planName}\r\n            </Button>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default ChoosePlanButton;","// client/src/pages/Public/PricingPage.js\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { useLocalization } from '../../contexts/LocalizationContext'\r\nimport Spinner from '../../components/UI/Spinner'\r\nimport Button from '../../components/UI/Button'\r\nimport { Check } from 'lucide-react'\r\nimport { getPublicPlansApi } from '../../services/api'\r\nimport ChoosePlanButton from '../../components/UI/ChoosePlanButton' // <-- 1. IMPORT\r\n\r\nconst CheckListItem = ({ children }) => (\r\n  <li className=\"flex items-start\">\r\n    <Check size={16} className=\"text-apple-green flex-shrink-0 mr-3 mt-1\" />\r\n    <span className=\"text-apple-gray-600 dark:text-apple-gray-300\">\r\n      {children}\r\n    </span>\r\n  </li>\r\n)\r\n\r\nconst PricingPage = () => {\r\n  const { t } = useTranslation()\r\n  const { location, loading: isLocalizationLoading } = useLocalization()\r\n\r\n  const [plans, setPlans] = useState([])\r\n  const [loadingPlans, setLoadingPlans] = useState(true)\r\n  const [error, setError] = useState('')\r\n\r\n  useEffect(() => {\r\n    const fetchPlans = async () => {\r\n      try {\r\n        const { data } = await getPublicPlansApi()\r\n        setPlans(data)\r\n      } catch (error) {\r\n        console.error('Failed to fetch pricing plans:', error)\r\n        setError('Could not load pricing plans. Please try again later.')\r\n      } finally {\r\n        setLoadingPlans(false)\r\n      }\r\n    }\r\n    fetchPlans()\r\n  }, [])\r\n\r\n  const findPriceString = (plan) => {\r\n    if (!plan || !location?.currency) return '...'\r\n\r\n    const regionalPrice = plan.prices.find(\r\n      (p) => p.currency === location.currency\r\n    )\r\n    const fallbackPrice = plan.prices.find((p) => p.currency === 'USD')\r\n\r\n    const priceToShow = regionalPrice || fallbackPrice\r\n\r\n    if (!priceToShow || typeof priceToShow.amount !== 'number')\r\n      return 'Not Available'\r\n\r\n    if (['XAF', 'XOF'].includes(priceToShow.currency)) {\r\n      return `${priceToShow.amount.toLocaleString('fr-FR')} ${\r\n        priceToShow.currency\r\n      }`\r\n    }\r\n    return new Intl.NumberFormat(undefined, {\r\n      style: 'currency',\r\n      currency: priceToShow.currency,\r\n    }).format(priceToShow.amount)\r\n  }\r\n\r\n  if (isLocalizationLoading || loadingPlans) {\r\n    return (\r\n      <div className=\"flex justify-center items-center min-h-[60vh]\">\r\n        <Spinner text={t('public.pricing.localizing', 'Loading Plans...')} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"text-center text-xl text-apple-red py-20\">{error}</div>\r\n  }\r\n\r\n  const basicPlan = plans.find((p) => p.name === 'Basic')\r\n  const proPlan = plans.find((p) => p.name === 'Pro')\r\n  const enterprisePlan = plans.find((p) => p.name === 'Enterprise')\r\n\r\n  return (\r\n    <div className=\"bg-apple-gray-50 dark:bg-apple-gray-950\">\r\n      <main>\r\n        <section className=\"py-20 text-center\">\r\n          <div className=\"container mx-auto px-6\">\r\n            <h1 className=\"text-4xl md:text-5xl font-bold tracking-tight text-apple-gray-900 dark:text-white mb-4\">\r\n              {t('public.pricing.title')}\r\n            </h1>\r\n            <p className=\"text-lg text-apple-gray-600 dark:text-apple-gray-400 max-w-2xl mx-auto\">\r\n              {t('public.pricing.subtitle')}\r\n            </p>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"pb-20\">\r\n          <div className=\"container mx-auto px-6\">\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 max-w-5xl mx-auto items-stretch\">\r\n              {/* --- Basic Plan --- */}\r\n              {basicPlan && (\r\n                <div className=\"border dark:border-apple-gray-700 rounded-apple-xl p-8 flex flex-col bg-white dark:bg-apple-gray-800/50\">\r\n                  <h3 className=\"text-2xl font-semibold\">\r\n                    {t('public.pricing.plans.basic.name')}\r\n                  </h3>\r\n                  <p className=\"mt-4 text-5xl font-bold tracking-tight\">\r\n                    {findPriceString(basicPlan)}\r\n                    <span className=\"ml-1 text-xl font-medium text-apple-gray-500 dark:text-apple-gray-400\">\r\n                      /{t('public.pricing.plans.basic.frequency')}\r\n                    </span>\r\n                  </p>\r\n                  <ul className=\"mt-6 space-y-3 mb-8\">\r\n                    {t('public.pricing.plans.basic.features', {\r\n                      returnObjects: true,\r\n                    }).map((feature, i) => (\r\n                      <CheckListItem key={i}>{feature}</CheckListItem>\r\n                    ))}\r\n                  </ul>\r\n                  <div className=\"flex-grow\"></div>\r\n                  {/* --- 2. REPLACE THE LINK WITH THE SMART BUTTON --- */}\r\n                  <div className=\"mt-auto\">\r\n                    <ChoosePlanButton\r\n                      planName={basicPlan.name}\r\n                      isFeatured={false}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* --- Pro Plan (Most Popular) --- */}\r\n              {proPlan && (\r\n                <div className=\"relative p-8 rounded-apple-xl border-2 border-apple-blue shadow-apple-xl flex flex-col bg-white dark:bg-apple-gray-800/50\">\r\n                  <div className=\"absolute top-0 -translate-y-1/2 left-1/2 -translate-x-1/2\">\r\n                    <span className=\"inline-flex items-center px-4 py-1 rounded-full text-sm font-semibold text-white bg-apple-blue\">\r\n                      {t('public.pricing.mostPopular')}\r\n                    </span>\r\n                  </div>\r\n                  <h3 className=\"text-2xl font-semibold\">\r\n                    {t('public.pricing.plans.pro.name')}\r\n                  </h3>\r\n                  <p className=\"mt-4 text-5xl font-bold tracking-tight\">\r\n                    {findPriceString(proPlan)}\r\n                    <span className=\"ml-1 text-xl font-medium text-apple-gray-500 dark:text-apple-gray-400\">\r\n                      /{t('public.pricing.plans.pro.frequency')}\r\n                    </span>\r\n                  </p>\r\n                  <ul className=\"mt-6 space-y-3 mb-8\">\r\n                    {t('public.pricing.plans.pro.features', {\r\n                      returnObjects: true,\r\n                    }).map((feature, i) => (\r\n                      <CheckListItem key={i}>{feature}</CheckListItem>\r\n                    ))}\r\n                  </ul>\r\n                  <div className=\"flex-grow\"></div>\r\n                  {/* --- 2. REPLACE THE LINK WITH THE SMART BUTTON --- */}\r\n                  <div className=\"mt-auto\">\r\n                    <ChoosePlanButton\r\n                      planName={proPlan.name}\r\n                      isFeatured={true}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* --- Enterprise Plan --- */}\r\n              {enterprisePlan && (\r\n                <div className=\"border dark:border-apple-gray-700 rounded-apple-xl p-8 flex flex-col bg-white dark:bg-apple-gray-800/50\">\r\n                  <h3 className=\"text-2xl font-semibold\">\r\n                    {t('public.pricing.plans.enterprise.name')}\r\n                  </h3>\r\n                  <p className=\"mt-4 text-4xl font-bold\">\r\n                    {t('public.pricing.plans.enterprise.price')}\r\n                    <span className=\"ml-1 text-lg font-medium text-apple-gray-500 dark:text-apple-gray-400\">\r\n                      /{t('public.pricing.plans.enterprise.frequency')}\r\n                    </span>\r\n                  </p>\r\n                  <ul className=\"mt-6 space-y-3 mb-8\">\r\n                    {t('public.pricing.plans.enterprise.features', {\r\n                      returnObjects: true,\r\n                    }).map((feature, i) => (\r\n                      <CheckListItem key={i}>{feature}</CheckListItem>\r\n                    ))}\r\n                  </ul>\r\n                  <div className=\"flex-grow\"></div>\r\n                  <Link to=\"/contact\" className=\"w-full mt-auto\">\r\n                    <Button\r\n                      variant=\"secondary\"\r\n                      size=\"lg\"\r\n                      className=\"w-full\"\r\n                    >\r\n                      {t('public.pricing.contactSales')}\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"py-20 bg-white dark:bg-apple-gray-900\">\r\n          <div className=\"container mx-auto px-6 max-w-3xl\">\r\n            <h2 className=\"text-3xl font-bold text-center mb-8\">\r\n              {t('public.pricing.faq.title')}\r\n            </h2>\r\n            <div className=\"space-y-6\">\r\n              {t('public.pricing.faq.items', {\r\n                returnObjects: true,\r\n                defaultValue: [],\r\n              }).map((faq, i) => (\r\n                <div key={i}>\r\n                  <h4 className=\"font-semibold mb-1\">{faq.question}</h4>\r\n                  <p className=\"text-sm text-apple-gray-600 dark:text-apple-gray-400\">\r\n                    {faq.answer}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className=\"py-20 bg-white dark:bg-apple-gray-900\">\r\n                    <div className=\"container mx-auto px-6 max-w-3xl\">\r\n                        <h2 className=\"text-3xl font-bold text-center mb-8 dark:text-white\">{t('public.pricing.faq.title')}</h2>\r\n                        <div className=\"space-y-6\">\r\n                            <div>\r\n                                <h4 className=\"font-semibold mb-1 dark:text-white\">{t('public.pricing.faq.freeTrial.question')}</h4>\r\n                                <p className=\"text-sm text-apple-gray-600 dark:text-apple-gray-400\">{t('public.pricing.faq.freeTrial.answer')}</p>\r\n                            </div>\r\n                            <div>\r\n                                <h4 className=\"font-semibold mb-1 dark:text-white\">{t('public.pricing.faq.changePlan.question')}</h4>\r\n                                <p className=\"text-sm text-apple-gray-600 dark:text-apple-gray-400\">{t('public.pricing.faq.changePlan.answer')}</p>\r\n                            </div>\r\n                             <div>\r\n                                <h4 className=\"font-semibold mb-1 dark:text-white\">{t('public.pricing.faq.smsRequirements.question')}</h4>\r\n                                <p className=\"text-sm text-apple-gray-600 dark:text-apple-gray-400\">{t('public.pricing.faq.smsRequirements.answer')}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\nexport default PricingPage"],"names":["_ref","planName","isFeatured","user","login","useAuth","navigate","useNavigate","t","useTranslation","isLoading","setIsLoading","useState","handleUpgrade","async","window","confirm","data","changeSubscriptionPlanApi","token","toast","success","message","error","_error$response","_error$response$data","response","_user$tenant","tenant","plan","_jsx","Button","variant","size","className","disabled","children","_jsxs","onClick","Link","to","toLowerCase","CheckListItem","Check","PricingPage","location","loading","isLocalizationLoading","useLocalization","plans","setPlans","loadingPlans","setLoadingPlans","setError","useEffect","getPublicPlansApi","console","fetchPlans","findPriceString","currency","regionalPrice","prices","find","p","fallbackPrice","priceToShow","amount","includes","toLocaleString","Intl","NumberFormat","undefined","style","format","Spinner","text","basicPlan","name","proPlan","enterprisePlan","returnObjects","map","feature","i","ChoosePlanButton","defaultValue","faq","question","answer"],"sourceRoot":""}