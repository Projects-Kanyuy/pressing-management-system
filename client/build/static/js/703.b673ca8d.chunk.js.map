{"version":3,"file":"static/js/703.b673ca8d.chunk.js","mappings":"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","sources":["components/UI/Input.js","pages/Admin/DirectoryAdminLoginPage.js","components/UI/Card.js"],"sourcesContent":["// client/src/components/UI/Input.js\r\nimport React from 'react';\r\n\r\nconst Input = ({\r\n    label,\r\n    id,\r\n    type = \"text\",\r\n    value,\r\n    onChange,\r\n    placeholder,\r\n    error,\r\n    required,\r\n    className = '',\r\n    inputClassName = '',\r\n    disabled = false,\r\n    prefix, // For text prefix like '$'\r\n    prefixIcon,\r\n    suffixIcon, // Can be a JSX element like an icon or a button with an icon\r\n    helperText,\r\n    containerStyle, // For custom styling on the outer div\r\n    ...props\r\n}) => {\r\n    return (\r\n        \r\n        <div className={`mb-4 ${className}`} style={containerStyle}>\r\n            {label && (\r\n                <label htmlFor={id} className=\"block text-sm font-medium text-apple-gray-700 dark:text-apple-gray-300 mb-1\">\r\n                    {label}\r\n                </label>\r\n            )}\r\n            <div className=\"relative rounded-apple shadow-apple-sm\">\r\n                {prefix && (\r\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                        <span className=\"text-apple-gray-500 sm:text-sm\">{prefix}</span>\r\n                    </div>\r\n                )}\r\n                {prefixIcon && (\r\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                        {React.cloneElement(prefixIcon, { className: \"h-5 w-5 text-apple-gray-500 dark:text-apple-gray-400\"})}\r\n                    </div>\r\n                )}\r\n                <input\r\n                    type={type}\r\n                    id={id}\r\n                    name={id || props.name}\r\n                    value={value === null || value === undefined ? '' : value}\r\n                    onChange={onChange}\r\n                    placeholder={placeholder}\r\n                    required={required}\r\n                    disabled={disabled}\r\n                    className={`\r\n                        form-input block w-full sm:text-sm\r\n                        border-apple-gray-300 focus:border-apple-blue focus:ring-apple-blue\r\n                        dark:bg-apple-gray-800 dark:border-apple-gray-700 dark:text-apple-gray-100\r\n                        dark:placeholder-apple-gray-500 dark:focus:border-apple-blue\r\n                        rounded-apple shadow-apple-sm\r\n                        ${error ? 'border-apple-red focus:border-apple-red focus:ring-apple-red' : ''}\r\n                        ${prefix || prefixIcon ? 'pl-10' : 'px-3'}\r\n                        ${suffixIcon ? 'pr-10' : 'px-3'}\r\n                        ${inputClassName}\r\n                    `.trim().replace(/\\s+/g, ' ')}\r\n                    {...props}\r\n                />\r\n                {/* THIS IS THE CORRECTED LOGIC FOR THE SUFFIX ICON */}\r\n                {suffixIcon && (\r\n                     <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center\">\r\n                        {/* This will render whatever JSX element is passed, e.g., a button */}\r\n                        {suffixIcon}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            {error && <p className=\"mt-1.5 text-xs text-apple-red\">{error}</p>}\r\n            {helperText && !error && <p className=\"mt-1.5 text-xs text-apple-gray-500 dark:text-apple-gray-400\">{helperText}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;","// client/src/pages/Admin/DirectoryAdminLoginPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { useDirectoryAuth } from '../../contexts/DirectoryAuthContext';\r\nimport Card from '../../components/UI/Card';\r\nimport Input from '../../components/UI/Input';\r\nimport Button from '../../components/UI/Button';\r\nimport Spinner from '../../components/UI/Spinner';\r\n\r\nconst DirectoryAdminLoginPage = () => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const { dirAdminLogin, isDirAdminAuthenticated, loading: authLoading } = useDirectoryAuth();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    // This effect handles navigation AFTER the authentication state is confirmed to be true\r\n    useEffect(() => {\r\n        if (isDirAdminAuthenticated && !authLoading) {\r\n            const from = location.state?.from?.pathname || \"/directory-admin/dashboard\";\r\n            navigate(from, { replace: true });\r\n        }\r\n    }, [isDirAdminAuthenticated, authLoading, navigate, location.state]);\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsSubmitting(true);\r\n        setError('');\r\n        try {\r\n            await dirAdminLogin({ username, password });\r\n            // DO NOT navigate here. The useEffect above will handle it.\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || \"Login failed. Please check credentials.\");\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n    // Show a spinner if the context is still doing its initial check OR if we are already logged in\r\n    // and waiting for the useEffect to navigate.\r\n    if (authLoading || isDirAdminAuthenticated) {\r\n        return <div className=\"flex h-screen items-center justify-center bg-apple-gray-800\"><Spinner size=\"lg\" /></div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen flex items-center justify-center bg-apple-gray-800 p-4\">\r\n            <Card title=\"Directory Admin Login\" className=\"w-full max-w-sm\">\r\n                <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n                    {error && <p className=\"text-red-500 text-center\">{error}</p>}\r\n                    <Input label=\"Username\" id=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} required />\r\n                    <Input label=\"Password\" id=\"password\" type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n                    <Button type=\"submit\" isLoading={isSubmitting} className=\"w-full\">Login</Button>\r\n                </form>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DirectoryAdminLoginPage;","import React from 'react';\r\n\r\nconst Card = ({ children, className = '', title, actions, titleClassName='', contentClassName='', actionsClassName='' }) => {\r\n    return (\r\n        <div className={`bg-white dark:bg-apple-gray-900 rounded-apple-lg shadow-apple overflow-hidden ${className}`}>\r\n            {title && (\r\n                <div className={`px-4 py-4 sm:px-6 border-b border-apple-gray-200 dark:border-apple-gray-800 ${titleClassName}`}>\r\n                    {typeof title === 'string' ? (\r\n                        <h3 className=\"text-lg leading-6 font-semibold text-apple-gray-900 dark:text-apple-gray-100\">\r\n                            {title}\r\n                        </h3>\r\n                    ) : title }\r\n                </div>\r\n            )}\r\n            <div className={`p-4 sm:p-6 ${contentClassName}`}>\r\n                {children}\r\n            </div>\r\n            {actions && (\r\n                <div className={`px-4 py-3 sm:px-6 bg-apple-gray-50 dark:bg-apple-gray-950/50 border-t border-apple-gray-200 dark:border-apple-gray-800 ${actionsClassName}`}>\r\n                    {actions}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;"],"names":["_ref","label","id","type","value","onChange","placeholder","error","required","className","inputClassName","disabled","prefix","prefixIcon","suffixIcon","helperText","containerStyle","props","_jsxs","style","children","_jsx","htmlFor","React","name","undefined","trim","replace","DirectoryAdminLoginPage","navigate","useNavigate","location","useLocation","dirAdminLogin","isDirAdminAuthenticated","loading","authLoading","useDirectoryAuth","username","setUsername","useState","password","setPassword","setError","isSubmitting","setIsSubmitting","useEffect","_location$state","_location$state$from","from","state","pathname","Spinner","size","Card","title","onSubmit","async","e","preventDefault","err","_err$response","_err$response$data","response","data","message","Input","target","Button","isLoading","actions","titleClassName","contentClassName","actionsClassName"],"sourceRoot":""}