{"version":3,"file":"static/js/43.e40cb8a3.chunk.js","mappings":"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","sources":["components/UI/PhoneInput.js","pages/Public/SignUpPage.js","components/UI/Input.js","components/UI/Card.js"],"sourcesContent":["// client/src/components/UI/PhoneInput.js\r\n\r\nimport React from 'react';\r\nimport PhoneInput from 'react-phone-number-input';\r\nimport 'react-phone-number-input/style.css'; // Keep the base styles\r\nimport './PhoneInput.css'; // Our custom styles will override the base\r\n\r\nconst CustomPhoneInput = React.forwardRef(({ label, value, onChange, onCountryChange, ...props }, ref) => {\r\n    return (\r\n        <div>\r\n            {label && <label className=\"block text-sm font-medium mb-1 text-apple-gray-700 dark:text-apple-gray-300\">{label}</label>}\r\n            \r\n            {/* --- THIS IS THE CHANGE --- */}\r\n            {/* We wrap the PhoneInput component in a div with our custom class */}\r\n            <div className=\"phone-input-wrapper\">\r\n                <PhoneInput\r\n                    international\r\n                    defaultCountry=\"CM\"\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    onCountryChange={onCountryChange}\r\n                    {...props}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default CustomPhoneInput;","// client/src/pages/Public/SignUpPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate, Link, useLocation } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { initiateRegistrationApi, finalizeRegistrationApi, initiatePaidSubscriptionApi } from '../../services/api';\r\nimport Card from '../../components/UI/Card';\r\nimport Button from '../../components/UI/Button';\r\nimport Input from '../../components/UI/Input';\r\nimport Spinner from '../../components/UI/Spinner';\r\nimport { ArrowLeft, ArrowRight, CheckCircle2, AlertTriangle, User, Building, Wrench, KeyRound, Eye, EyeOff, Plus, Trash2 } from 'lucide-react';\r\nimport toast from 'react-hot-toast';\r\nimport PhoneInput from '../../components/UI/PhoneInput'; \r\nconst countryCurrencyMap = {\r\n    CM: 'FCFA', // Cameroon\r\n    NG: 'NGN',  // Nigeria\r\n    GH: 'GHS',  // Ghana\r\n    KE: 'KES',  // Kenya\r\n    ZA: 'ZAR',  // South Africa\r\n    US: 'USD',  // United States\r\n    GB: 'GBP',  // United Kingdom\r\n    FR: 'EUR',  // France (Euro)\r\n    // Add any other countries and currencies you want to support\r\n};\r\n\r\n// --- Step Components (can be moved to separate files) ---\r\nconst Step1AdminAccount = ({ data, setData, onNext }) => {\r\n    const { t } = useTranslation();\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [showPassword, setShowPassword] = useState(false); \r\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n    const togglePasswordVisibility = () => {\r\n            setShowPassword(!showPassword);\r\n        };\r\n    \r\n        const passwordIcon = (\r\n            showPassword ? (\r\n                <EyeOff size={18} onClick={togglePasswordVisibility} className=\"cursor-pointer text-apple-gray-400 hover:text-apple-gray-600 dark:hover:text-apple-gray-200\" />\r\n            ) : (\r\n                <Eye size={18} onClick={togglePasswordVisibility} className=\"cursor-pointer text-apple-gray-400 hover:text-apple-gray-600 dark:hover:text-apple-gray-200\" />\r\n            )\r\n        );\r\n\r\n    const handleNext = () => {\r\n        setError('');\r\n        if (!data.username || !password) { setError(t('signup.step1.errors.usernameRequired')); return; }\r\n        if (!data.email || !/^\\S+@\\S+\\.\\S+$/.test(data.email)) { setError(t('signup.step1.errors.emailInvalid')); return; }\r\n        if (password.length < 6) { setError(t('signup.step1.errors.passwordLength')); return; }\r\n        if (password !== confirmPassword) { setError(t('signup.step1.errors.passwordMismatch')); return; }\r\n        setData('adminUser', 'password', password);\r\n        onNext();\r\n    };\r\n    return (\r\n        <div className=\"space-y-4 animate-fade-in\">\r\n            <div className=\"flex items-center space-x-3 mb-4\"><div className=\"bg-apple-blue text-white rounded-full p-2\"><User size={20} /></div><h3 className=\"font-semibold text-xl dark:text-white\">{t('signup.step1.title')}</h3></div>\r\n            <p className=\"text-sm text-apple-gray-500\">{t('signup.step1.subtitle')}</p>\r\n            {error && <p className=\"text-sm text-red-500 p-2 bg-red-100 dark:bg-red-900/30 rounded-md\">{error}</p>}\r\n            <Input label={t('signup.step1.username')} name=\"username\" value={data.username} onChange={e => setData('adminUser', 'username', e.target.value)}  />\r\n            <Input label={t('signup.step1.email')} name=\"email\" type=\"email\" value={data.email} onChange={e => setData('adminUser', 'email', e.target.value)} />\r\n            <Input label={t('signup.step1.password')} name=\"password\" type={showPassword ? \"text\" : \"password\"} value={password} onChange={e => setPassword(e.target.value)} suffixIcon={\r\n                    showPassword ? (\r\n                        <EyeOff size={18} onClick={() => setShowPassword(false)} className=\"cursor-pointer text-apple-gray-400 hover:text-apple-gray-600\" />\r\n                    ) : (\r\n                        <Eye size={18} onClick={() => setShowPassword(true)} className=\"cursor-pointer text-apple-gray-400 hover:text-apple-gray-600\" />\r\n                    )\r\n                } />\r\n            <Input label={t('signup.step1.confirmPassword')} name=\"confirmPassword\"  type={showConfirmPassword ? \"text\" : \"password\"} value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} suffixIcon={\r\n                    showConfirmPassword ? (\r\n                        <EyeOff size={18} onClick={() => setShowConfirmPassword(false)} className=\"cursor-pointer text-apple-gray-400 hover:text-apple-gray-600\" />\r\n                    ) : (\r\n                        <Eye size={18} onClick={() => setShowConfirmPassword(true)} className=\"cursor-pointer text-apple-gray-400 hover:text-apple-gray-600\" />\r\n                    )\r\n                } />\r\n            <div className=\"flex justify-end pt-4\"><Button onClick={handleNext} iconRight={<ArrowRight size={16} />}>{t('signup.step1.nextButton')}</Button></div>\r\n        </div>\r\n    );\r\n};\r\nconst Step2CompanyInfo = ({ data, setData, onNext, onPrev }) => {\r\n    const { t } = useTranslation();\r\n    const [error, setError] = useState('');\r\n    const handleNext = () => {\r\n        setError('');\r\n        if (!data.name) { setError(t('signup.step2.errors.nameRequired')); return; }\r\n        if (!data.currencySymbol) { setError(t('signup.step2.errors.currencyRequired')); return; }\r\n        onNext();\r\n    };\r\n    const handleCountryChange = (countryCode) => {\r\n        // Find the currency for the selected country\r\n        const newCurrency = countryCurrencyMap[countryCode];\r\n        if (newCurrency) {\r\n            // Update the currency symbol in the main form data\r\n            setData('setTopLevel', 'currencySymbol', newCurrency);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"space-y-4 animate-fade-in\">\r\n            <div className=\"flex items-center space-x-3 mb-4\"><div className=\"bg-apple-blue text-white rounded-full p-2\"><Building size={20} /></div><h3 className=\"font-semibold text-xl dark:text-white\">{t('signup.step2.title')}</h3></div>\r\n            {error && <p className=\"text-sm text-red-500 p-2 bg-red-100 dark:bg-red-900/30 rounded-md\">{error}</p>}\r\n            <Input label={t('signup.step2.businessName')} name=\"name\" value={data.name} onChange={e => setData('companyInfo', 'name', e.target.value)} />\r\n            <Input label={t('signup.step2.businessAddress')} name=\"address\" value={data.address} onChange={e => setData('companyInfo', 'address', e.target.value)} />\r\n            <PhoneInput label={t('signup.step2.businessPhone')} value={data.phone} onChange={(value) => setData('companyInfo', 'phone', value)} onCountryChange={handleCountryChange}/>\r\n            <Input label={t('signup.step2.currencySymbol')} name=\"currencySymbol\" value={data.currencySymbol} onChange={e => setData('setTopLevel', 'currencySymbol', e.target.value)} />\r\n            <div className=\"flex justify-between pt-4\"><Button variant=\"secondary\" onClick={onPrev} iconLeft={<ArrowLeft size={16} />}>{t('signup.step2.backButton')}</Button><Button onClick={handleNext} iconRight={<ArrowRight size={16} />}>{t('signup.step2.nextButton')}</Button></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Step3SetupServices = ({ formData, setFormData, onNext, onPrev }) => {\r\n    const { t } = useTranslation();\r\n    const [newItem, setNewItem] = useState('');\r\n    const [newService, setNewService] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const currencySymbol = formData.currencySymbol || '$';\r\n\r\n    // --- Handlers for Item and Service Types ---\r\n    const addItemType = (e) => {\r\n        e.preventDefault(); // Prevent form submission if inside a form tag\r\n        const trimmed = newItem.trim();\r\n        if (trimmed && !formData.itemTypes.find(i => i.toLowerCase() === trimmed.toLowerCase())) {\r\n            setFormData(prev => ({ ...prev, itemTypes: [...prev.itemTypes, trimmed] }));\r\n            setError('');\r\n        }\r\n        setNewItem('');\r\n    };\r\n\r\n    const addServiceType = (e) => {\r\n        e.preventDefault();\r\n        const trimmed = newService.trim();\r\n        if (trimmed && !formData.serviceTypes.find(s => s.toLowerCase() === trimmed.toLowerCase())) {\r\n            setFormData(prev => ({ ...prev, serviceTypes: [...prev.serviceTypes, trimmed] }));\r\n            setError('');\r\n        }\r\n        setNewService('');\r\n    };\r\n\r\n    const removeItemType = (itemToRemove) => {\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            itemTypes: prev.itemTypes.filter(item => item !== itemToRemove),\r\n            // Also remove any prices associated with this item type\r\n            priceList: prev.priceList.filter(p => p.itemType !== itemToRemove),\r\n        }));\r\n    };\r\n\r\n    const removeServiceType = (serviceToRemove) => {\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            serviceTypes: prev.serviceTypes.filter(service => service !== serviceToRemove),\r\n            // Also remove any prices associated with this service type\r\n            priceList: prev.priceList.filter(p => p.serviceType !== serviceToRemove),\r\n        }));\r\n    };\r\n\r\n    // --- Handlers for Price Matrix ---\r\n    const handlePriceChange = (itemType, serviceType, price) => {\r\n        const priceValue = parseFloat(price);\r\n        const existingIndex = formData.priceList.findIndex(p => p.itemType === itemType && p.serviceType === serviceType);\r\n        let newList = [...formData.priceList];\r\n\r\n        if (existingIndex > -1) {\r\n            if (isNaN(priceValue) || priceValue <= 0) {\r\n                // If price is cleared, remove the entry\r\n                newList.splice(existingIndex, 1);\r\n            } else {\r\n                newList[existingIndex].price = priceValue;\r\n            }\r\n        } else if (!isNaN(priceValue) && priceValue > 0) {\r\n            // If new price is entered, add it\r\n            newList.push({ itemType, serviceType, price: priceValue });\r\n        }\r\n        setFormData(prev => ({ ...prev, priceList: newList }));\r\n    };\r\n\r\n    const getPrice = (itemType, serviceType) => {\r\n        return formData.priceList.find(p => p.itemType === itemType && p.serviceType === serviceType)?.price ?? '';\r\n    };\r\n\r\n    // --- Validation and Navigation ---\r\n    const handleNext = () => {\r\n        setError('');\r\n        if (formData.itemTypes.length === 0) {\r\n            setError(t('signup.step3.errors.itemTypesRequired'));\r\n            return;\r\n        }\r\n        if (formData.serviceTypes.length === 0) {\r\n            setError(t('signup.step3.errors.serviceTypesRequired'));\r\n            return;\r\n        }\r\n        const hasAtLeastOnePrice = formData.priceList.some(p => p.price > 0);\r\n        if (!hasAtLeastOnePrice) {\r\n            if (!window.confirm(t('signup.step3.errors.noPricesConfirm'))) {\r\n                return;\r\n            }\r\n        }\r\n        onNext(); // Call the prop function to move to the next step\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-6 animate-fade-in\">\r\n            <div className=\"flex items-center space-x-3 mb-4\">\r\n                <div className=\"bg-apple-blue text-white rounded-full p-2\"><Wrench size={20} /></div>\r\n                <h3 className=\"font-semibold text-xl text-apple-gray-800 dark:text-white\">{t('signup.step3.title')}</h3>\r\n            </div>\r\n            <p className=\"text-sm text-apple-gray-500 dark:text-apple-gray-400\">{t('signup.step3.subtitle')}</p>\r\n            {error && <p className=\"text-sm text-red-500 p-2 bg-red-100 dark:bg-red-900/30 rounded-md\">{error}</p>}\r\n\r\n            {/* --- Manage Item Types UI --- */}\r\n            <div className=\"space-y-3 p-4 border rounded-apple-md dark:border-apple-gray-700\">\r\n                <h4 className=\"font-medium text-apple-gray-800 dark:text-apple-gray-100\">{t('signup.step3.itemTypes.title')}</h4>\r\n                <form onSubmit={addItemType} className=\"flex space-x-2\">\r\n                    <Input value={newItem} onChange={e => setNewItem(e.target.value)} placeholder={t('signup.step3.itemTypes.placeholder')} className=\"mb-0 flex-grow\" />\r\n                    <Button type=\"submit\" iconLeft={<Plus size={16} />}>{t('signup.step3.itemTypes.addButton')}</Button>\r\n                </form>\r\n                <div className=\"flex flex-wrap gap-2 pt-2\">\r\n                    {formData.itemTypes.map(item => (\r\n                        <span key={item} className=\"flex items-center bg-apple-gray-200 dark:bg-apple-gray-700 text-sm rounded-full px-3 py-1\">\r\n                            {item}\r\n                            <button type=\"button\" onClick={() => removeItemType(item)} className=\"ml-2 text-apple-gray-500 hover:text-apple-red\" aria-label={`Remove ${item}`}>\r\n                                <Trash2 size={14} />\r\n                            </button>\r\n                        </span>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* --- Manage Service Types UI --- */}\r\n            <div className=\"space-y-3 p-4 border rounded-apple-md dark:border-apple-gray-700\">\r\n                <h4 className=\"font-medium text-apple-gray-800 dark:text-apple-gray-100\">{t('signup.step3.serviceTypes.title')}</h4>\r\n                <form onSubmit={addServiceType} className=\"flex space-x-2\">\r\n                    <Input value={newService} onChange={e => setNewService(e.target.value)} placeholder={t('signup.step3.serviceTypes.placeholder')} className=\"mb-0 flex-grow\" />\r\n                    <Button type=\"button\" onClick={addServiceType} iconLeft={<Plus size={16} />}>{t('signup.step3.serviceTypes.addButton')}</Button>\r\n                </form>\r\n                <div className=\"flex flex-wrap gap-2 pt-2\">\r\n                    {formData.serviceTypes.map(service => (\r\n                        <span key={service} className=\"flex items-center bg-apple-gray-200 dark:bg-apple-gray-700 text-sm rounded-full px-3 py-1\">\r\n                            {service}\r\n                            <button type=\"button\" onClick={() => removeServiceType(service)} className=\"ml-2 text-apple-gray-500 hover:text-apple-red\" aria-label={`Remove ${service}`}>\r\n                                <Trash2 size={14} />\r\n                            </button>\r\n                        </span>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            \r\n            {/* --- Pricing Grid --- */}\r\n            {formData.itemTypes.length > 0 && formData.serviceTypes.length > 0 && (\r\n                <div className=\"overflow-x-auto p-1 border rounded-md dark:border-apple-gray-700\">\r\n                    <table className=\"min-w-full text-sm\">\r\n                        <thead className=\"bg-apple-gray-100 dark:bg-apple-gray-800/50\">\r\n                            <tr>\r\n                                <th className=\"p-2 text-left font-semibold text-apple-gray-700 dark:text-apple-gray-200\">{t('signup.step3.pricingGrid.header')}</th>\r\n                                {formData.serviceTypes.map(s => <th key={s} className=\"p-2 text-center font-semibold text-apple-gray-700 dark:text-apple-gray-200\">{s}</th>)}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {formData.itemTypes.map(item => (\r\n                                <tr key={item} className=\"border-t dark:border-apple-gray-700\">\r\n                                    <td className=\"p-2 font-medium bg-apple-gray-50 dark:bg-apple-gray-800/40\">{item}</td>\r\n                                    {formData.serviceTypes.map(service => (\r\n                                        <td key={`${item}-${service}`} className=\"p-1 sm:p-2 text-center\">\r\n                                            <Input\r\n                                                type=\"number\"\r\n                                                value={getPrice(item, service)}\r\n                                                onChange={e => handlePriceChange(item, service, e.target.value)}\r\n                                                placeholder=\"0.00\"\r\n                                                className=\"mb-0 w-24 mx-auto\"\r\n                                                prefix={currencySymbol} // Add prefix to your Input component if it supports it\r\n                                            />\r\n                                        </td>\r\n                                    ))}\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"flex justify-between pt-4\">\r\n                <Button variant=\"secondary\" onClick={onPrev} iconLeft={<ArrowLeft size={16} />}>{t('signup.step3.backButton')}</Button>\r\n                <Button onClick={handleNext} iconRight={<ArrowRight size={16} />}>{t('signup.step3.nextButton')}</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Step4Confirmation = ({ data, onPrev, onConfirm, isSubmitting }) => {\r\n    const { t } = useTranslation();\r\n    \r\n    return (\r\n        <div className=\"space-y-4 animate-fade-in\">\r\n            <div className=\"flex items-center space-x-3 mb-4\"><div className=\"bg-apple-blue text-white rounded-full p-2\"><CheckCircle2 size={20} /></div><h3 className=\"font-semibold text-xl\">{t('signup.step4.title')}</h3></div>\r\n            <p className=\"text-sm text-apple-gray-500\">{t('signup.step4.subtitle')}</p>\r\n            <div className=\"p-4 bg-apple-gray-100 dark:bg-apple-gray-800/50 rounded-md text-sm space-y-2\">\r\n                <p><strong>{t('signup.step4.adminUsername')}</strong> {data.adminUser.username}</p><p><strong>{t('signup.step4.adminEmail')}</strong> {data.adminUser.email}</p>\r\n                <p><strong>{t('signup.step4.businessName')}</strong> {data.companyInfo.name}</p>\r\n                <p><strong>{t('signup.step4.itemsServices')}</strong> {t('signup.step4.itemsServicesCount', { items: data.itemTypes.length, services: data.serviceTypes.length, prices: data.priceList.length })}</p>\r\n            </div>\r\n            <div className=\"flex justify-between pt-4\">\r\n                <Button variant=\"secondary\" onClick={onPrev} iconLeft={<ArrowLeft size={16} />} disabled={isSubmitting}>{t('signup.step4.backButton')}</Button>\r\n                <Button onClick={onConfirm} isLoading={isSubmitting} iconLeft={<KeyRound size={16} />}>{t('signup.step4.confirmButton')}</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Step5OtpVerification = ({ data, onPrev, onFinalize, isSubmitting }) => {\r\n    const { t } = useTranslation();\r\n    const [otp, setOtp] = useState('');\r\n    return (\r\n        <div className=\"space-y-4 animate-fade-in\">\r\n            <h3 className=\"font-semibold text-xl\">{t('signup.step5.title')}</h3>\r\n            <p className=\"text-sm text-apple-gray-500\">{t('signup.step5.subtitle', { email: data.adminUser.email })}</p>\r\n            <Input label={t('signup.step5.verificationCode')} id=\"otp\" value={otp} onChange={e => setOtp(e.target.value)} maxLength={6} placeholder=\"123456\" />\r\n            <div className=\"flex justify-between pt-4\">\r\n                <Button variant=\"secondary\" onClick={onPrev} disabled={isSubmitting}>{t('signup.step5.backButton')}</Button>\r\n                <Button onClick={() => onFinalize(otp)} isLoading={isSubmitting}>\r\n                    {data.plan.toLowerCase() === 'trial' ? t('signup.step5.verifyTrial', 'Verify & Create Account') : t('signup.step5.verifyPaid', 'Verify & Proceed to Pay')}\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n// --- Main SignUpPage Component ---\r\nconst SignUpPage = () => {\r\n    const { t } = useTranslation();\r\n    const { login } = useAuth();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [step, setStep] = useState(1);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    const planNameFromUrl = new URLSearchParams(location.search).get('plan') || 'trial';\r\n    const planCapitalized = planNameFromUrl.charAt(0).toUpperCase() + planNameFromUrl.slice(1);\r\n\r\n    const [formData, setFormData] = useState({\r\n        adminUser: { username: '', password: '', email: '' },\r\n        companyInfo: { name: '', address: '', phone: '' },\r\n        currencySymbol: 'FCFA',\r\n        itemTypes: [],\r\n        serviceTypes: [],\r\n        priceList: [],\r\n        plan: planCapitalized,\r\n    });\r\n\r\n    useEffect(() => {\r\n        // This useEffect is fine.\r\n        if (formData.itemTypes.length === 0 && formData.serviceTypes.length === 0) {\r\n            setFormData(prev => ({\r\n                ...prev,\r\n                itemTypes: [t('signup.defaultItems.shirt'), t('signup.defaultItems.trousers'), t('signup.defaultItems.suit'), t('signup.defaultItems.dress')],\r\n                serviceTypes: [t('signup.defaultServices.wash'), t('signup.defaultServices.ironOnly'), t('signup.defaultServices.dryClean')]\r\n            }));\r\n        }\r\n    }, [t, formData.itemTypes.length, formData.serviceTypes.length]);\r\n    const updateFormData = (section, field, value) => {\r\n        if (section === 'topLevel') {\r\n            // For top-level properties like 'currencySymbol'\r\n            setFormData(prev => ({ ...prev, [field]: value }));\r\n        } else {\r\n            // For nested properties like 'adminUser.username'\r\n            setFormData(prev => ({\r\n                ...prev,\r\n                [section]: {\r\n                    ...prev[section],\r\n                    [field]: value\r\n                }\r\n            }));\r\n        }\r\n    };\r\n    const handleSetData = (section, field, value) => {\r\n        if (section === 'setTopLevel') {\r\n            updateFormData(field, value);\r\n        } else {\r\n            updateFormData(section, value, field); // Note: order might be different\r\n        }\r\n    };\r\n    // Then you pass `handleSetData` to the step components. This requires refactoring\r\n    // how you call setData. Let's simplify the Step2 call for now.\r\n    \r\n    // A simpler way to update the main component's state from the child\r\n    const handleSetDataForStep2 = (section, field, value) => {\r\n        if (section === 'setTopLevel') {\r\n            setFormData(prev => ({ ...prev, [field]: value }));\r\n        } else {\r\n            setFormData(prev => ({ ...prev, [section]: { ...prev[section], [field]: value } }));\r\n        }\r\n    };\r\n\r\n    const setTopLevelFormData = (field, value) => setFormData(prev => ({ ...prev, [field]: value }));\r\n    const nextStep = () => setStep(prev => Math.min(prev + 1, 5));\r\n    const prevStep = () => setStep(prev => Math.max(prev - 1, 1));\r\n// Paste this entire block inside your SignUpPage component, replacing the old handler functions.\r\n\r\n const handleInitiateRegistration = async () => {\r\n        setIsSubmitting(true);\r\n        setError('');\r\n        setSuccess('');\r\n        try {\r\n            // It makes ONE API call. The backend's logic will decide what to do.\r\n            const { data } = await initiateRegistrationApi(formData);\r\n\r\n            if (data.paymentRequired) {\r\n                // The backend says payment is needed and has sent us the link.\r\n                setSuccess(data.message);\r\n                window.location.href = data.paymentLink;\r\n            } else {\r\n                // The backend says it's a Trial, so we move to the OTP step.\r\n                setSuccess(data.message);\r\n                setStep(5);\r\n            }\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || t('signup.errors.registrationFailed'));\r\n            setStep(1);\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n    \r\n    // This function is ONLY for Trial signups. It is called from Step 5.\r\n    const handleFinalizeRegistration = async (otp) => {\r\n        if (!otp || otp.length !== 6) { setError(t('signup.errors.otpInvalid')); return; }\r\n        setIsSubmitting(true);\r\n        setError('');\r\n        try {\r\n            const { data } = await finalizeRegistrationApi({ email: formData.adminUser.email, otp });\r\n            login(data);\r\n            toast.success('Account created successfully!');\r\n            navigate('/app/dashboard');\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || t('signup.errors.verificationFailed'));\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n    \r\n    const renderStep = () => {\r\n        switch (step) {\r\n            case 1: return <Step1AdminAccount data={formData.adminUser} setData={updateFormData} onNext={nextStep} />;\r\n            case 2: return <Step2CompanyInfo data={{...formData.companyInfo, currencySymbol: formData.currencySymbol}} setData={handleSetDataForStep2} onNext={nextStep} onPrev={prevStep} />;\r\n            case 3: return <Step3SetupServices formData={formData} setFormData={setFormData} onNext={nextStep} onPrev={prevStep} />;\r\n            // Pass the correct handler to the confirmation step\r\n            case 4: return <Step4Confirmation data={formData} onPrev={prevStep} onConfirm={handleInitiateRegistration} isSubmitting={isSubmitting} plan={planCapitalized} />;\r\n            // Pass the correct handler to the OTP step\r\n            case 5: return <Step5OtpVerification data={formData} onPrev={() => setStep(4)} onFinalize={handleFinalizeRegistration} isSubmitting={isSubmitting} />;\r\n            default: return <Step1AdminAccount data={formData.adminUser} setData={updateFormData} onNext={nextStep} />;\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"min-h-screen bg-apple-gray-100 dark:bg-apple-gray-950 flex flex-col items-center justify-center p-4\">\r\n            {/* Back to Home Button */}\r\n            <div className=\"absolute top-6 left-6\">\r\n                <Link \r\n                    to=\"/\" \r\n                    className=\"flex items-center space-x-2 text-apple-gray-600 dark:text-apple-gray-400 hover:text-apple-blue dark:hover:text-apple-blue transition-colors\"\r\n                >\r\n                    <ArrowLeft size={20} />\r\n                                    </Link>\r\n            </div>\r\n\r\n             <Link to=\"/\" className=\"flex items-center space-x-2 mb-8\"><svg className=\"h-10 w-10 text-apple-blue\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\" /></svg>\r\n                <span className=\"text-3xl font-bold text-apple-gray-800 dark:text-apple-gray-100\">PressMark</span></Link>\r\n            <Card className=\"w-full max-w-3xl shadow-apple-lg\">\r\n                <div className=\"flex items-center p-4 border-b dark:border-apple-gray-700\">\r\n                    <h2 className=\"text-xl font-bold text-center flex-grow dark:text-white\">{t('signup.title')}</h2>\r\n                    <span className=\"text-sm font-medium text-apple-gray-500\">{step < 5 ? t('signup.stepProgress', { current: step, total: 4 }) : t('signup.finalStep')}</span>\r\n                </div>\r\n                {error && <div className=\"p-3 m-4 text-sm bg-red-100 text-apple-red rounded-apple flex items-center\"><AlertTriangle size={18} className=\"mr-2\"/>{error}</div>}\r\n                <div className=\"p-6\">{renderStep()}</div>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\nexport default SignUpPage;","// client/src/components/UI/Input.js\r\nimport React from 'react';\r\n\r\nconst Input = ({\r\n    label,\r\n    id,\r\n    type = \"text\",\r\n    value,\r\n    onChange,\r\n    placeholder,\r\n    error,\r\n    required,\r\n    className = '',\r\n    inputClassName = '',\r\n    disabled = false,\r\n    prefix, // For text prefix like '$'\r\n    prefixIcon,\r\n    suffixIcon, // Can be a JSX element like an icon or a button with an icon\r\n    helperText,\r\n    containerStyle, // For custom styling on the outer div\r\n    ...props\r\n}) => {\r\n    return (\r\n        \r\n        <div className={`mb-4 ${className}`} style={containerStyle}>\r\n            {label && (\r\n                <label htmlFor={id} className=\"block text-sm font-medium text-apple-gray-700 dark:text-apple-gray-300 mb-1\">\r\n                    {label}\r\n                </label>\r\n            )}\r\n            <div className=\"relative rounded-apple shadow-apple-sm\">\r\n                {prefix && (\r\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                        <span className=\"text-apple-gray-500 sm:text-sm\">{prefix}</span>\r\n                    </div>\r\n                )}\r\n                {prefixIcon && (\r\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                        {React.cloneElement(prefixIcon, { className: \"h-5 w-5 text-apple-gray-500 dark:text-apple-gray-400\"})}\r\n                    </div>\r\n                )}\r\n                <input\r\n                    type={type}\r\n                    id={id}\r\n                    name={id || props.name}\r\n                    value={value === null || value === undefined ? '' : value}\r\n                    onChange={onChange}\r\n                    placeholder={placeholder}\r\n                    required={required}\r\n                    disabled={disabled}\r\n                    className={`\r\n                        form-input block w-full sm:text-sm\r\n                        border-apple-gray-300 focus:border-apple-blue focus:ring-apple-blue\r\n                        dark:bg-apple-gray-800 dark:border-apple-gray-700 dark:text-apple-gray-100\r\n                        dark:placeholder-apple-gray-500 dark:focus:border-apple-blue\r\n                        rounded-apple shadow-apple-sm\r\n                        ${error ? 'border-apple-red focus:border-apple-red focus:ring-apple-red' : ''}\r\n                        ${prefix || prefixIcon ? 'pl-10' : 'px-3'}\r\n                        ${suffixIcon ? 'pr-10' : 'px-3'}\r\n                        ${inputClassName}\r\n                    `.trim().replace(/\\s+/g, ' ')}\r\n                    {...props}\r\n                />\r\n                {/* THIS IS THE CORRECTED LOGIC FOR THE SUFFIX ICON */}\r\n                {suffixIcon && (\r\n                     <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center\">\r\n                        {/* This will render whatever JSX element is passed, e.g., a button */}\r\n                        {suffixIcon}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            {error && <p className=\"mt-1.5 text-xs text-apple-red\">{error}</p>}\r\n            {helperText && !error && <p className=\"mt-1.5 text-xs text-apple-gray-500 dark:text-apple-gray-400\">{helperText}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nconst Card = ({ children, className = '', title, actions, titleClassName='', contentClassName='', actionsClassName='' }) => {\r\n    return (\r\n        <div className={`bg-white dark:bg-apple-gray-900 rounded-apple-lg shadow-apple overflow-hidden ${className}`}>\r\n            {title && (\r\n                <div className={`px-4 py-4 sm:px-6 border-b border-apple-gray-200 dark:border-apple-gray-800 ${titleClassName}`}>\r\n                    {typeof title === 'string' ? (\r\n                        <h3 className=\"text-lg leading-6 font-semibold text-apple-gray-900 dark:text-apple-gray-100\">\r\n                            {title}\r\n                        </h3>\r\n                    ) : title }\r\n                </div>\r\n            )}\r\n            <div className={`p-4 sm:p-6 ${contentClassName}`}>\r\n                {children}\r\n            </div>\r\n            {actions && (\r\n                <div className={`px-4 py-3 sm:px-6 bg-apple-gray-50 dark:bg-apple-gray-950/50 border-t border-apple-gray-200 dark:border-apple-gray-800 ${actionsClassName}`}>\r\n                    {actions}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;"],"names":["React","_ref","ref","label","value","onChange","onCountryChange","props","_jsxs","children","_jsx","className","PhoneInput","international","defaultCountry","countryCurrencyMap","CM","NG","GH","KE","ZA","US","GB","FR","Step1AdminAccount","data","setData","onNext","t","useTranslation","password","setPassword","useState","confirmPassword","setConfirmPassword","error","setError","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","togglePasswordVisibility","EyeOff","Eye","User","size","Input","name","username","e","target","type","email","suffixIcon","onClick","Button","handleNext","test","length","iconRight","ArrowRight","Step2CompanyInfo","_ref2","onPrev","Building","address","phone","countryCode","newCurrency","currencySymbol","variant","iconLeft","ArrowLeft","Step3SetupServices","_ref3","formData","setFormData","newItem","setNewItem","newService","setNewService","addServiceType","preventDefault","trimmed","trim","serviceTypes","find","s","toLowerCase","prev","getPrice","itemType","serviceType","_formData$priceList$f","_formData$priceList$f2","priceList","p","price","Wrench","onSubmit","itemTypes","i","placeholder","Plus","map","item","removeItemType","itemToRemove","filter","Trash2","service","removeServiceType","serviceToRemove","handlePriceChange","priceValue","parseFloat","existingIndex","findIndex","newList","isNaN","splice","push","prefix","some","window","confirm","Step4Confirmation","_ref4","onConfirm","isSubmitting","CheckCircle2","adminUser","companyInfo","items","services","prices","disabled","isLoading","KeyRound","Step5OtpVerification","_ref5","onFinalize","otp","setOtp","id","maxLength","plan","SignUpPage","login","useAuth","navigate","useNavigate","location","useLocation","step","setStep","success","setSuccess","setIsSubmitting","planNameFromUrl","URLSearchParams","search","get","planCapitalized","charAt","toUpperCase","slice","useEffect","updateFormData","section","field","handleSetDataForStep2","nextStep","Math","min","prevStep","max","handleInitiateRegistration","async","initiateRegistrationApi","paymentRequired","message","href","paymentLink","err","_err$response","_err$response$data","response","handleFinalizeRegistration","finalizeRegistrationApi","toast","_err$response2","_err$response2$data","Link","to","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Card","current","total","AlertTriangle","renderStep","required","inputClassName","prefixIcon","helperText","containerStyle","style","htmlFor","undefined","replace","title","actions","titleClassName","contentClassName","actionsClassName"],"sourceRoot":""}